## Creating Q matrix
# excangeability rates

for (i in 1:n_data_subsets) {
    er_prior[i] <- v(1,1,1,1,1,1)
    er[i] ~ dnDirichlet(er_prior[i])
    moves.append( mvBetaSimplex(er[i], alpha=10, tune=true, weight=5.0) )
}

# stationary frequencies

for (i in 1:n_data_subsets) {
    pi_prior[i] <- v(1,1,1,1)
    pi[i] ~ dnDirichlet(pi_prior[i])
    moves.append( mvBetaSimplex(pi[i], alpha=10, tune=true, weight=5.0) )
}

# GTR model matrix

for (i in 1:n_data_subsets) {
    Q_dna[i] := fnGTR(er[i],pi[i])
}

## +G +I

for (i in 1:n_data_subsets) {
    alpha[i] ~ dnUniform( 0.0, 1E8 )
    alpha[i].setValue( 1.0 )
    gamma_rates[i] := fnDiscretizeGamma( alpha[i], alpha[i], 4)
    moves.append( mvScale(alpha[i], lambda=0.01, weight=1.0) )
    moves.append( mvScale(alpha[i], lambda=0.1,  weight=1.0) )
    moves.append( mvScale(alpha[i], lambda=1,    weight=1.0) )
}

for (i in 1:n_data_subsets) {
    pinvar[i] ~ dnBeta(1,1)
    moves.append( mvBetaProbability(pinvar[i], delta=10.0, tune=true, weight=1.0) )
}

for (i in 1:n_data_subsets) {
    seq[i] ~ dnPhyloCTMC(tree=fbd_tree, Q=Q_dna[i], branchRates=branch_rates[i], siteRates=gamma_rates[i], pInv=pinvar[i], type="DNA")
    seq[i].clamp(dna_data[i])
}
