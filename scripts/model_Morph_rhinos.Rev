# model of character evolution for morphological data


#clock_morpho ~ dnExponential(1.0)
#moves.append( mvScale(clock_morpho, lambda=0.1,  weight=2.0) )

alpha_morpho ~ dnExponential( 1.0 )
rates_morpho := fnDiscretizeGamma( alpha_morpho, alpha_morpho, 4 )
moves.append( mvScale(alpha_morpho, lambda=0.1,  weight=2.0) )

#n_max_states <- morpho.maxStates()
n_max_states <- 4

idx = 1
morpho_bystate[1] <- morpho
for (i in 2:n_max_states) {

   morpho_bystate[i] <- morpho                                # make local tmp copy of data
   morpho_bystate[i].setNumStatesPartition(i)                 # only keep character blocks with state space equal to size i
   nc = morpho_bystate[i].nchar()                             # get number of characters per character size with i-sized states

   if (nc > 0) {

      q[idx] <- fnJC(i)                                      # make i-by-i rate matrix

      m_morph[idx] ~ dnPhyloCTMC ( tree=phylogeny, Q=q[idx], nSites=nc, siteRates=rates_morpho, type="Standard", coding="variable")

      m_morph[idx].clamp(morpho_bystate[i])

      idx = idx + 1

   }
}
